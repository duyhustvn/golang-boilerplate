#+title: Golang boilerplate

* Swagger
- Generate/update API docs
#+begin_src shell
swag init -g ./cmd/service/main.go
swag init -g ./cmd/service/main.go -o ./internal/swagger
#+end_src
- Access swagger UI
  Go to url *http://localhost:8001/swagger/index.html*

* Helm
- Generate gpg key pairs to encrypt/decrypt the confidential data (password, passphrase...)
#+begin_src shell
gpg --gen-key
#+end_src
The result should be like this
#+begin_src shell
gpg: key F6F8FDAE01716CDC marked as ultimately trusted
#+end_src
Key F6F8FDAE01716CDC is a Key ID. In GPG, the Key ID is a unique identifier assigned to each key pair, consisting of both a public key and a private key. The Key ID serves as a shorthand for identifying your GPG key. It's derived from a portion of the public key's fingerprint and is typically displayed in hexadecimal format. It's used to reference the key pair in various GPG operations. It is not a public key or private key.

- Generate secret
#+begin_src shell
sops --encrypt -pgp {pgp KEY ID} secret-env.yaml > dev-secrets.yaml
#+end_src
Example:
#+begin_src shell
sops --encrypt -pgp F6F8FDAE01716CDC secret-env.yaml > dev-secrets.yaml
#+end_src

- Deploy with helm
#+begin_src shell
sops -d k8s/dev-secrets.yaml > temp-dev-secrets.yaml && helm upgrade --install boilerplate-be-dev --values temp-dev-secrets.yaml ./k8s && rm temp-dev-secrets.yaml
#+end_src
If you got an error "inappropriate ioctl for device", it is because gpg cannot read the passphrase from terminal. To fix it set the env *GPG_TTY*
#+begin_src shell
export GPG_TTY=$(tty)
#+end_src

* Generate self-signed certificate
https://support.citrix.com/article/CTX135602/how-to-create-a-selfsigned-san-certificate-using-openssl-on-citrix-adc-appliance

#+begin_src shell
openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout changeme.vn.key -out changeme.vn.cert -config selft-signed-cert.conf -extensions 'v3_req'
#+end_src

** Add hosts
- Get ip of the ingress add its to the /etc/hosts
#+begin_src shell
<ingress ip> changeme.vn
#+end_src
** Check if server is up and running
#+begin_src shell
curl -k https://changeme.vn/api/healthz
#+end_src
