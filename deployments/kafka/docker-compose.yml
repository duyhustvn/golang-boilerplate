version: "3"

services:
  kafka-kraft:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: kafka-kraft
    restart: always
    ports:
      - "9092:9092"
    environment:
      # configuration is written to: /opt/bitnami/kafka/config/kraft/server.properties
      ALLOW_PLAINTEXT_LISTENER: yes
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-kraft:9093
      # Listener
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://172.17.0.1:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # config
      KAFKF_CFG_LOG_RETENTION_HOURS: 168 # 7 days

      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true

      KAFKA_OPTS: -javaagent:/opt/jolokia/jolokia-jvm.jar
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  zookeeper:
    image: bitnami/zookeeper:3.7
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always

  kafka-zookeeper:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: kafka-zookeeper
    ports:
      - "9092:9092" # broker
      - "8778:8778" # jolokia
    volumes:
      - "kafka_zookeeper_data:/bitnami"
    restart: always
    environment:
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT

      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://172.17.0.1:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_OPTS: -javaagent:/opt/jolokia/jolokia-jvm.jar=host=0.0.0.0
    depends_on:
      - zookeeper

volumes:
  zookeeper_data:
    driver: local
  kafka_zookeeper_data:
    driver: local
