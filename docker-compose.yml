version: "3"

services:
  be:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: be:v1
    container_name: be
    environment:
      - SERVICE_NAME=boilerplate
      - SERVICE_ENV=dev

      - HTTPS_PORT=8000

      - LOG_LEVEL=INFO
      - LOG_PATH=logs/app.log

      - REDIS_ADDRS=cache:6379
      - REDIS_PASSWORD=
      - REDIS_CHANNEL=
      - REDIS_DB=
      - REDIS_POOL_SIZE=20

      - KAFKA_BROKERS=172.17.0.1:9092
      - KAFKA_GROUP_ID=boilerplate
      - KAFKA_POOL_SIZE=30
      - KAFKA_SIGNUP_USER_TOPIC=register

      - STATSD_ADDR=172.17.0.1:8125
      - STATSD_PREFIX=boilerplate_prefix
      - STATSD_FLUSH_PERIOD=100

    ports:
      - 8000:8001
    networks:
      - be_nw
    depends_on:
      - cache
      - kafka
    logging:
      driver: fluentd
      options:
        tag: docker

  cache:
    image: redis:7.0.11-alpine
    container_name: redis
    restart: always
    expose:
      - 6379
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ${HOME}/dockercompose/data/redis:/data
    networks:
      - be_nw

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    restart: always
    ports:
      - 9092:9092
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listener
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://172.17.0.1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

networks:
  be_nw:
    driver: bridge
    name: be
